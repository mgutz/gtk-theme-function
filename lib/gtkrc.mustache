#!!! DO NOT EDIT. This file is auto-generated by Function/lib/gtkrc.js

# Based off Radiance theme by Kenneth Wimer and James Schriver
#
# Authors:
#       Mario Gutierrez (mario@mgutz.com)
#
# Feel free to modify and share!

# contrast setting is noticeable on disbled buttons
#

gtk_color_scheme = "bg_color:{{bgColor}}\nselected_bg_color:{{selectedBgColor}}\nfg_color:{{fgColor}}\nselected_fg_color:{{selectedFgColor}}\nbase_color:{{baseColor}}\ntext_color:{{textColor}}\ntooltip_bg_color:{{tooltipBgColor}}\ntooltip_fg_color:{{tooltipFgColor}}\nlink_color:{{linkColor}}"
gtk-icon-sizes = "panel-menu=22,22:gtk-button=16,16"
gtk-auto-mnemonics = 1 

style "default"
{
	xthickness = 2 # set this.xthickness + button.xthickness >= 3 to get nice spacing on breadcrumbs in open file dialog
	ythickness = 1

	#######################
	# Style Properties
	#######################
	GtkWidget::new-tooltip-style = 1

	GtkImage::x-ayatana-indicator-dynamic = 1

	GtkScrolledWindow ::scrollbar-spacing = 0
	GtkScrolledWindow ::scrollbar-within-bevel = 0
	
	GtkButton::child-displacement-x = 1
	GtkButton::child-displacement-y = 1
	GtkButton::default-border = { 0, 0, 0, 0 }

	GtkCheckButton::indicator-size = 14

	GtkPaned::handle-size = 6
        GtkNotebook ::tab-overlap = 3 

	GtkRange::trough-border = 0
	GtkRange::slider-width = 15
	GtkRange::stepper-size = 18 
        GtkRange::trough-under-steppers = 0

	GtkScale::slider-length = 22
	GtkScale::trough-side-details = 1

	GtkScrollbar::min-slider-length = 36
	GtkScrollbar::activate-slider = 1
	GtkMenuBar::internal-padding = 0
	GtkExpander::expander-size = 8
	GtkToolbar::internal-padding = 0
	GtkTreeView::expander-size = 8
	GtkTreeView::indent-expanders = 1
	GtkTreeView::vertical-separator = 0

        {{#darkTheme}}
        GtkTreeView::odd-row-color = shade(1.12, @base_color) 
        GtkTreeView::even-row-color = shade(1, @base_color) 
        {{/darkTheme}}

	#GtkProgressBar ::min-vertical-bar-width = 14 #GtkProgressBar ::min-horizontal-bar-width = 14 #GtkProgressBar ::min-horizontal-bar-height = 14 #GtkProgressBar ::min-vertical-bar-height = 12

	GtkMenu::horizontal-padding = 1
	GtkMenu::vertical-padding = 4

	WnckTasklist::fade-overlay-rect = 0
	# The following line hints to gecko (and possibly other appliations)
	# that the entry should be drawn transparently on the canvas.
	# Without this, gecko will fill in the background of the entry.
	GtkEntry::honors-transparent-bg-hint = 1
	GtkEntry::state-hint = 0

        GtkEntry::progress-border = { 2, 2, 2, 2 }
	GtkToolbar:: shadow-type = GTK_SHADOW_NONE
	GtkMenuBar:: shadow-type = GTK_SHADOW_NONE
	GtkMenuBar::window-dragging = 1

	GtkWidget::link-color = @link_color
	GtkIMHtml::hyperlink-color = @link_color
	GtkHTML::link-color = @link_color

	####################
	# Color Definitions
	####################
	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[ACTIVE]        = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
	
	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[ACTIVE]        = shade (0.88, @bg_color)
	bg[SELECTED]	  = @selected_bg_color
	bg[INSENSITIVE]   = @bg_color
	
	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.95, @bg_color)
	base[ACTIVE]      = mix (0.7, @selected_bg_color, @bg_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = @bg_color


	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[ACTIVE]      = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = darker (@bg_color)

	engine "murrine" 
	{
		animation           = TRUE  # FALSE = disabled, TRUE = enabled
		arrowstyle          = 1     # 0 = normal arrows, 1 = filled arrows
		#border_colors      = { "#ffffff", "#ffffff" } # colors used on borders of many widgets
		border_shades       = { 1.2, 1.0 } # gradient to draw on border
		comboboxstyle       = 0     # 0 = normal combobox, 1 = colorized combobox below arrow
		colorize_scrollbar  = FALSE  # FALSE = disabled, TRUE = enabled
		contrast            = 0.8   # 0.8 for less contrast, more than 1.0 for more contrast on borders
		expanderstyle       = 0 # 0 = arrows, 1 = circles with plus/minus, 2 = buttons with plus/minus
		focus_color         = @selected_bg_color 
		glazestyle          = 0     # 0 = flat, 1 = curved, 2 = concave, 3 = top-curved, 4 = beryl
		glow_shade          = 1.1   # sets glow amount for buttons or widgets
		glowstyle           = 0     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = center (vertical), 4 = center (horizontal) 
		
		gradient_shades     = {1.15, 1.02, 1.02, 0.9} # default: {1.1,1.0,1.0,1.1}
		highlight_shade     = {{highlightShade}}   # set highlight amount for buttons or widgets
		lightborder_shade   = 1.1   # sets lightborder amount for buttons or widgets
		lightborderstyle    = 1     # 0 = lightborder on top side, 1 = lightborder on all sides
		listviewheaderstyle = 1     # 0 = flat, 1 = glassy, 2 = raised
		listviewstyle       = 0     # 0 = nothing, 1 = dotted 2 = solid
		menubaritemstyle    = 2     # 0 = menuitem look, 1 = button look
		menubarstyle        = 0     # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
		menuitemstyle       = 0     # 0 = flat, 1 = glassy, 2 = striped
		menustyle           = 0     # 0 = no vertical menu stripe, 1 = display vertical menu stripe
		prelight_shade      = .95  # shade level for scrollbar's slider, comboboxstyle(1), and prelight state with gradient_colors
		progressbarstyle    = 1     # 0 = no stripes, 1 = diagonal stripes, 2 = vertical stripes 
		reliefstyle	    = 4     # 0 = flat, 1 = inset, 2 = shadow, 3 = shadow with gradient, 4 = stronger shadow with gradient
		rgba		    = FALSE # FALSE = disabled, TRUE = enabled
		roundness           = 3     # 0 = squared, 1 = old default, more will increase roundness
		scrollbarstyle      = 0     # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes, 4 = diagonal stripes and handles, 5 = horizontal stripes, 6 = horizontal stripes and handles
		shadow_shades 	    = { 0.8, 2.2 } # draw gradient on shadow of some widgets
		separatorstyle	    = 1
		sliderstyle         = 0     # 0 = nothing added, 1 = handles
		spinbuttonstyle     = 0     # 0 = no seperator, 1 = with separator
		stepperstyle        = 1     # 0 = standard, 1 = integrated stepper handles, 2 = squared steppers with round slider
		textstyle           = 0     # 0 = normal text, 1 = inset
		toolbarstyle	    = 0     # 0 = flat, 1 = glassy, 2 = gradient
		trough_shades       = { 0.88, 2.0 } # draw gradient on trough of GtkScrollbar and GtkProgressbar
	}
}


style "debug" 
{
    text[NORMAL]      = "red"
	text[PRELIGHT]    = shade(1.2, "red")
	text[ACTIVE]      = shade(1.4, "red")
	text[SELECTED]    = shade(0.8, "red")
	text[INSENSITIVE] = shade(0.6, "red")
	
        fg[NORMAL]      = "blue"
	fg[PRELIGHT]    = shade(1.2, "blue")
	fg[ACTIVE]      = shade(1.4, "blue")
	fg[SELECTED]    = shade(0.8, "blue")
	fg[INSENSITIVE] = shade(0.6, "blue")
}


style "selected" = "default"
{
	bg[NORMAL]   = shade (0.75, @bg_color)
	bg[PRELIGHT] = shade (0.85, @bg_color)
	bg[SELECTED] = shade (0.85, @bg_color)
	bg[ACTIVE]   = shade (0.75, @bg_color)
	bg[INSENSITIVE]   = mix (0.35, @selected_bg_color, @bg_color)
}


style "wide"
{
	xthickness = 2
	ythickness = 2
}

style "wider"
{
	xthickness = 3
	ythickness = 3
}

style "entry" 
{
        # has to be >= roundness
	xthickness = 3 
	ythickness = 3

	#bg[SELECTED] = mix (0.4, @selected_bg_color, @base_color)
	#fg[SELECTED] = @text_color

	engine "murrine"
	{
		border_shades = {1.0, 1.0 }
		contrast = .8
	}
}

style "button"
{

        # these should be equal for focus overlays
        ythickness= 1
        xthickness = 1          

	engine "murrine"
	{
		lightborder_shade = 1.1
	
		border_shades       	= { 1.02, .85} # draw a gradient on the border.
		border_colors       	= { darker(@bg_color), darker(@bg_color)}
		contrast		= 0.8 
        	gradient_shades         = {1.12, 1.0, 1.0, 0.88} # default: {1.1,1.0,1.0,1.1}
		glazestyle          	= 0     # 0 = flat, 1 = curved, 2 = concave, 3 = top-curved, 4 = beryl
		glow_shade          	= 1.0   # sets glow amount for buttons or widgets
		glowstyle           	= 0     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = center (vertical), 4 = center (horizontal) 
	}

	bg[NORMAL]	= shade (1.0, @bg_color)
	bg[PRELIGHT] 	= shade (.9, @bg_color)
	bg[ACTIVE]      = mix(0.3, @selected_bg_color, shade(.95, @bg_color))  # toggle color 
}


style "toolbar" 
{
}

style "toolbar-item" = "toolbar"
{
}

style "notebook" = "wider"
{
	engine "murrine"
	{
		contrast = .8
		#gradient_shades = {1.1,1.06,0.92,0.1} # { 1.1, 1.02, 0.97, 0.93 }
		lightborder_shade = 1.1
	}
	
	

	#bg[NORMAL]   = mix(0.2, @selected_bg_color, @bg_color)
	bg[ACTIVE] = shade(1.05, @bg_color) # inactive tabs
}

style "panel" = "selected"
{
        # both need to be 0 to get nice window list on taskbar 
	xthickness = 0
	ythickness = 0

	bg_pixmap[NORMAL] = "{{panelBg}}"

	bg[NORMAL] = shade(0.81, @bg_color)
	bg[ACTIVE] = mix(0.4, @selected_bg_color, shade(.8, @bg_color)) # active window
	

	#bg[ACTIVE] = @selected_bg_color	
        #fg[ACTIVE]   = @selected_fg_color
        
	engine "murrine" 
	{
		gradient_shades     = {1.18, 1.0, 1.0, 0.82} # default: {1.1,1.0,1.0,1.1}
            	roundness = 0
                textstyle  = 1
        }
}


style "terminal" 
{
        text[NORMAL] = "#eeeeee"
        base[NORMAL] = "#242424"
        #TerminalScreen::background-darkness=0.95
}

style "menu" 
{
	xthickness = 0
	ythickness = 0

	bg[INSENSITIVE]   = mix (0.4, @selected_bg_color, @bg_color)

        engine "murrine" 
	{
            	roundness = 0
        }
}

style "menu-item" = "default"
{
	xthickness = 0
	ythickness = 4

        # hmmm .. prelight is used for text instead of selected
        #bg[SELECTED] = mix(0.5, @selected_bg_color, @bg_color) #@selected_bg_color 
        fg[PRELIGHT] = @selected_fg_color 
        

        engine "murrine" 
	{
            	glowstyle = 0
           	roundness = 0
        }


}

style "separator-menu-item"
{
	GtkWidget::wide-separators = 1
	GtkWidget::separator-width = 1
	GtkWidget::separator-height = 2
	xthickness = 4
	ythickness = 0
}

style "treeview"
{
}

# make comboboxes, togglebuttons flatter than buttons. most themes
# look too bumpy
style "treeview-header"
{
	ythickness = 1
	xthickness = 1

	bg[NORMAL]	= shade(1.02,@bg_color)
	bg[PRELIGHT] 	= shade (.9, @bg_color)
	engine "murrine"
	{
		border_shades       	= { 1.1, 1.0} # draw a gradient on the border.
                border_colors       	= { darker(@bg_color), darker(@bg_color) }
		contrast = 0.8
		glazestyle          	= 0     # 0 = flat, 1 = curved, 2 = concave, 3 = top-curved, 4 = beryl
		glow_shade          	= 1.0   # sets glow amount for buttons or widgets
		glowstyle           	= 0     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = center (vertical), 4 = center (horizontal) 
		gradient_shades     = {1.05, 0.97, 0.97, 0.9} # default: {1.1,1.0,1.0,1.1}
		highlight_shade     	= {{highlightShade}}  # set highlight amount for buttons or widgets
		lightborder_shade   	= 1.1   # sets lightborder amount for buttons or widgets
                roundness = 0
		spinbuttonstyle     = 0     # 0 = no seperator, 1 = with separator

	}
}

style "tooltips"
{
	xthickness = 8
	ythickness = 5

	bg[NORMAL] = @tooltip_bg_color
	bg[SELECTED] = darker(@tooltip_bg_color) #outline color
	fg[NORMAL] = @tooltip_fg_color
}

style "progressbar" 
{
	xthickness = 1
	ythickness = 1
	
	engine "murrine"
	{
		border_shades       	= { .85, .85} # draw a gradient on the border.
		border_colors       	= { @selected_bg_color, @selected_bg_color }
		#contrast		= 1.0 
		glazestyle          	= 0     # 0 = flat, 1 = curved, 2 = concave, 3 = top-curved, 4 = beryl
		glow_shade          	= 1.14   # sets glow amount for buttons or widgets
		glowstyle           	= 0     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = center (vertical), 4 = center (horizontal) 
		#highlight_shade     	= {{highlightShade}}  # set highlight amount for buttons or widgets
		#lightborder_shade   	= 1.2   # sets lightborder amount for buttons or widgets
		roundness		= 9
		gradient_shades     = {1.1,1.05,1.05,0.95} # default: {1.1,1.0,1.0,1.1}
	}

	bg[NORMAL]	= shade (1.0, @bg_color)
	bg[PRELIGHT] 	= shade (1.2, @bg_color)
	bg[SELECTED] 	= @selected_bg_color
	fg[PRELIGHT] 	= "#fff"
}

style "statusbar" 
{
}

# make comboboxes, togglebuttons flatter than buttons. most themes
# look too bumpy
style "chiclet"
{
        # must be >= roundness which is used by input boxes
	ythickness = 3
	xthickness = 3

	bg[NORMAL]	= shade(1.1, @bg_color)
	bg[INSENSITIVE]	= @bg_color

	engine "murrine"
	{
		border_shades       	= { 1.03, 0.9} # draw a gradient on the border.
                border_colors       	= { darker(@bg_color), darker(@bg_color) }
		contrast = 0.8
		glazestyle          	= 0     # 0 = flat, 1 = curved, 2 = concave, 3 = top-curved, 4 = beryl
		glow_shade          	= 1.0   # sets glow amount for buttons or widgets
		glowstyle           	= 0     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = center (vertical), 4 = center (horizontal) 
		gradient_shades         = {1.02, 0.97, 0.97, 0.92} # default: {1.1,1.0,1.0,1.1}
		highlight_shade     	= {{highlightShade}}  # set highlight amount for buttons or widgets
		lightborder_shade   	= 1.1   # sets lightborder amount for buttons or widgets
		spinbuttonstyle         = 0     # 0 = no seperator, 1 = with separator
	}
}




style "spinbutton" 
{
}

style "scale"
{
	GtkRange::slider-width = 14
	
	engine "murrine"
	{
		contrast		= 0.8
		glazestyle          	= 0     # 0 = flat, 1 = curved, 2 = concave, 3 = top-curved, 4 = beryl
		glow_shade          	= 1.14   # sets glow amount for buttons or widgets
		glowstyle           	= 0     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = center (vertical), 4 = center (horizontal) 
		highlight_shade     	= {{highlightShade}}  # set highlight amount for buttons or widgets
		roundness		= 6
	}

	bg[NORMAL]	= shade (1.0, @bg_color)
	bg[PRELIGHT] 	= shade (.9, @bg_color)
	bg[SELECTED] 	= @selected_bg_color
}

style "hscale"
{
}

style "vscale"
{
}

style "scrollbar"
{
	xthickness = 1
	ythickness = 1
	
	engine "murrine"
	{
		border_shades       	= { 0.85, .85} # draw a gradient on the border.
		border_colors       	= { @selected_bg_color, @selected_bg_color }
		#contrast		= 1.0 
		glazestyle          	= 0     # 0 = flat, 1 = curved, 2 = concave, 3 = top-curved, 4 = beryl
		glow_shade          	= 1.0   # sets glow amount for buttons or widgets
		glowstyle           	= 0     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = center (vertical), 4 = center (horizontal) 
		#highlight_shade     	= {{highlightShade}}  # set highlight amount for buttons or widgets
		#lightborder_shade   	= 1.2   # sets lightborder amount for buttons or widgets
		roundness		= 6
		gradient_shades     = {1.1,1.05,1.05,0.95} # default: {1.1,1.0,1.0,1.1}
	}

	bg[NORMAL]	= shade(1.0, @selected_bg_color)
	bg[PRELIGHT] 	= shade(0.95, @selected_bg_color)
	bg[SELECTED] 	= @selected_bg_color
	bg[ACTIVE] 	= shade(0.9, @selected_bg_color)
	fg[SELECTED] 	= @selected_bg_color
}

style "hscrollbar"
{
}

style "vscrollbar"
{
}

style "menubar" = "default"
{
	#bg[NORMAL]	= "#e0d6ba"
}

style "soundfix"
{
	bg[NORMAL]	= "#F7F5F2"
}

style "frame"
{
}

style "frame-title" = "frame"
{
}

style "nautilus-location"
{
	bg[NORMAL] = mix(0.60, @bg_color, @selected_bg_color)
}

style "nautilus-sidebar" 
{
	GtkTreeView::even_row_color = @bg_color
}

style "radiocheck"
{
        {{#darkTheme}}
	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[ACTIVE]        = shade (0.88, @bg_color)
	bg[INSENSITIVE]   = @bg_color

        text[NORMAL] = "#cccccc" 
        text[PRELIGHT] = "#eeeeee" 
        {{/darkTheme}}

	bg[SELECTED] 	= @selected_bg_color 
	
	engine "murrine"
	{
	    	contrast = 0.8
	    	highlight_shade = {{highlightShade}} 
	    	lightborder_shade = 1.0
	    	gradient_shades = {1.1,1.0,1.0,0.9}
	}
}

#########################################
# Matches
#########################################

widget "*IdoScaleMenuItem*" style "scale"
widget "*IdoEntryMenuItem*" style "wide"

# default style is applied to every widget
class "GtkWidget"    style "default"

# Increase the x/ythickness in some widgets
class "GtkToolbar"   					style "default" 
class "GtkRange"     					style "wide"
class "GtkFrame"     					style "wide"
class "GtkSeparator" 					style "wide"
class "GtkEntry"     					style "entry"

class "GtkSpinButton"  					style "chiclet"
class "GtkScale"       					style "scale"
class "GtkVScale"      					style "vscale"
class "GtkHScale"      					style "hscale"
class "GtkScrollbar"   					style "scrollbar"
class "GtkVScrollbar"  					style "vscrollbar"
class "GtkHScrollbar"  					style "hscrollbar"

class "GtkRadioButton"					style:highest "radiocheck"	
class "GtkCheckButton"					style:highest "radiocheck"	

widget_class "*<GtkNotebook>*<GtkEventBox>"     	style "notebook"
widget_class "*<GtkNotebook>*<GtkDrawingArea>"		style "notebook"
widget_class "*<GtkNotebook>*<GtkLayout>"       	style "notebook"
widget_class "*<GtkNotebook>*<GtkViewport>"		style "notebook"
widget_class "*<GtkNotebook>*<GtkScrolledWindow>"	style "notebook"

widget_class "*<GtkButton>"      			style "button"
widget_class "*<GtkNotebook>"    			style "notebook"
widget_class "*<GtkStatusbar>*"  			style "statusbar"


# !!! must be here if toggle buttons are to be styled separately from buttons
# and comboboxes, which use togglebutton
widget_class "*GtkToggleButton"		                style "chiclet"

widget_class "*<GtkComboBoxEntry>*"			style:highest "chiclet"
widget_class "*<GtkComboBox>*"         			style:highest "chiclet"
widget_class "*<GtkOptionMenu>*"         		style:highest "chiclet"
widget_class "*<GtkCombo>*"         			style:highest "chiclet"

widget_class "*<GtkMenuBar>*"           		style "menubar"
widget_class "*<GtkMenu>*"              		style "menu"
widget_class "*<GtkMenuItem>*"          		style "menu-item"
widget_class "*<GtkSeparatorMenuItem>*" 		style "separator-menu-item"

widget_class "*.<GtkFrame>.<GtkLabel>" 			style "frame-title"
widget_class "*.<GtkTreeView>*"        			style "treeview"

widget_class "*<GtkProgress>"				style "progressbar"
widget_class "*<GtkProgressBar>"       			style "progressbar"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>" 		style "treeview-header"
widget_class "*.<GtkCTree>.<GtkButton>"    		style "treeview-header"
widget_class "*.<GtkList>.<GtkButton>"     		style "treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"    		style "treeview-header"

# Workarounds for Evolution
widget_class "*.ETable.ECanvas"    			style "treeview-header"
widget_class "*.ETree.ECanvas"    			style "treeview-header"



# The window of the tooltip is called "gtk-tooltip"
################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
################################
widget "gtk-tooltip*" 					style "tooltips"

###################################################
# Special cases and work arounds
###################################################

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" 			style : highest "nautilus-location"

# Nautilus sidebar
widget_class "*Nautilus*Places*Sidebar*"    	style "nautilus-sidebar"
widget_class "*Nautilus*Side*.GtkWidget"    	style "nautilus-sidebar"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that the work around assumes that the combobox is _not_ in
# appears-as-list mode.
# Similar hack also in the menuitem style.
# This style does not affect GtkComboBoxEntry, it does have an effect
# on comboboxes in appears-as-list mode though.
style "combobox-text-color-workaround"
{
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[ACTIVE]      = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = shade (0.65, @bg_color)
}
widget_class "*.<GtkComboBox>.<GtkCellView>"		style "combobox-text-color-workaround"

style "menuitem-text-is-fg-color-workaround"
{
	text[NORMAL]        = @fg_color
	text[PRELIGHT]      = @selected_fg_color
	text[ACTIVE]        = @fg_color
	text[SELECTED]      = @selected_fg_color
	text[INSENSITIVE]   = shade (0.65, @bg_color)
}

widget "*.gtk-combobox-popup-menu.*"   			style "menuitem-text-is-fg-color-workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the
# base color set.
style "fg-is-text-color-workaround"
{
	fg[NORMAL]      = @text_color
	fg[PRELIGHT]    = @text_color
	fg[ACTIVE]      = @selected_fg_color
	fg[SELECTED]    = @selected_fg_color
	fg[INSENSITIVE] = shade (0.65, @bg_color)
}

widget_class "*<GtkListItem>*" 				style "fg-is-text-color-workaround"

# The same problem also exists for GtkCList and GtkCTree
# Only match GtkCList and not the parent widgets, because that would also change the headers.
widget_class "*<GtkCList>" 				style "fg-is-text-color-workaround"

style "evo-new-button-workaround"
{
	engine "murrine"
	{
		toolbarstyle = 0
	}
}

widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "evo-new-button-workaround"

# Theme panel elements
widget "*PanelWidget*" 					style "panel"
widget "*PanelApplet*" 					style "panel"
widget "*fast-user-switch*"				style "panel" # workaround for Fast User Switch applet
class "PanelApp*" 					    style "panel"
class "PanelToplevel*" 					style "panel"
widget_class "*notif*" 					style "panel"
widget_class "*Notif*" 					style "panel"

class "TerminalScreen" style "terminal"

# vim: set ft=GTKRC :
